---
- name: Configure foreman operating systems

  hosts: foreman_app

  become: yes

  roles:

    - nephelaiio.plugins

  tasks:

    - name: query foreman architectures
      uri:
        url: "{{ foreman_url }}/api/architectures"
        method: GET
        body_format: json
        body:
          per_page: "{{ foreman_api_allpages }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      register: foreman_arch_query

    - name: query foreman architecture oss
      uri:
        url: "{{ foreman_url }}/api/architectures/{{ item }}"
        method: GET
        body_format: json
        body:
          per_page: "{{ foreman_api_allpages }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      loop: "{{ foreman_arch_query.json.results | map(attribute='id') | flatten(levels=1) }}"
      register: foreman_archos_query

    - name: set architecture facts
      set_fact:
        foreman_arch_results: "{{ foreman_arch_query.json.results }}"
        foreman_archos_results: "{{ foreman_archos_query.results | map(attribute='json') | list }}"

    - name: query foreman media
      uri:
        url: "{{ foreman_url }}/api/media"
        method: GET
        body_format: json
        body:
          per_page: "{{ foreman_api_allpages }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      register: foreman_media_query

    - name: set media facts
      set_fact:
        foreman_media_results: "{{ foreman_media_query.json.results }}"

    - name: query foreman provisioning templates
      uri:
        url: "{{ foreman_url }}/api/provisioning_templates"
        method: GET
        body_format: json
        body:
          per_page: "{{ foreman_api_allpages }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      register: foreman_provisioning_template_query

    - name: set template facts
      set_fact:
        foreman_provisioning_template_results: "{{ foreman_provisioning_template_query.json.results }}"

    - name: set provisioning template dict
      set_fact:
        foreman_provisioning_template_dict: "{{ (foreman_provisioning_template_dict | default({})) | combine({ item.name: item}) }}"
      loop_control:
        label: "{{ item.name }}"
      loop: "{{ foreman_provisioning_template_results | flatten(levels=1) }}"

    - name: query foreman partition templates
      uri:
        url: "{{ foreman_url }}/api/ptables"
        method: GET
        body_format: json
        body:
          per_page: "{{ foreman_api_allpages }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      register: foreman_ptable_query

    - name: set partition table facts
      set_fact:
        foreman_ptable_results: "{{ foreman_ptable_query.json.results }}"

    - name: query foreman operating systems
      uri:
        url: "{{ foreman_url }}/api/operatingsystems"
        method: GET
        body_format: json
        body:
          per_page: "{{ foreman_api_allpages }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      register: foreman_os_query

    - name: set operating system facts
      set_fact:
        foreman_os_results: "{{ foreman_os_query.json.results }}"
        foreman_os_names: "{{ foreman_os_query.json.results | map(attribute='name') | list }}"

    - name: create foreman operating systems
      uri:
        url: "{{ foreman_url }}/api/operatingsystems"
        method: POST
        body_format: json
        body:
          operatingsystem:
            name: "{{ item.name }}"
            major: "{{ item.major | default(omit) }}"
            minor: "{{ item.minor | default(omit) }}"
            description: "{{ item.description | default(omit) }}"
            family: "{{ item.family | default(omit) }}"
            release_name: "{{ item.release_name | default(omit) }}"
            password_hash: "{{ item.password_hash | default(omit) }}"
            architecture_ids: "{{ foreman_arch_results | selectattr('name', 'equalto', inventory_os.architecture | default('')) | map(attribute='id') | list }}"
            medium_ids: "{{ foreman_media_results | selectattr('name', 'equalto', inventory_os.medium | default('')) | map(attribute='id') | list }}"
            ptable_ids: "{{ foreman_ptable_results | selectattr('name', 'equalto', inventory_os.ptable | default('')) | map(attribute='id') | list }}"
            os_family: "{{ item.os_family | default(omit) }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 201
      vars:
        inventory_os: "{{ foreman_os.values() | selectattr('name', 'equalto', item.name) | first }}"
      loop_control:
        label: "{{ item.name }}"
      loop: "{{ foreman_os.values() | flatten(levels=1) }}"
      when: item.name not in foreman_os_names

    - name: query foreman operating systems
      uri:
        url: "{{ foreman_url }}/api/operatingsystems"
        method: GET
        body_format: json
        body:
          per_page: "{{ foreman_api_allpages }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      register: foreman_os_query

    - name: set operating system facts
      set_fact:
        foreman_os_results: "{{ foreman_os_query.json.results }}"
        foreman_os_names: "{{ foreman_os_query.json.results | map(attribute='name') | list }}"

    - name: set operating system dict
      set_fact:
        foreman_os_dict: "{{ (foreman_os_dict | default({})) | combine({ item.name: item}) }}"
      loop_control:
        label: "{{ item.name }}"
      loop: "{{ foreman_os_results | flatten(levels=1) }}"

    - name: merge os facts
      set_fact:
        os_details: "{{ (os_details | default({})) | combine({ inventory.name: inventory | combine(foreman) }) }}"
      vars:
        inventory: "{{ item.0 }}"
        foreman: "{{ item.1 }}"
      when: inventory.name == foreman.name
      loop_control:
        label: "{{ item.0.name }}"
      loop: "{{ foreman_os.values() | product(foreman_os_query.json.results) | list }}"

    - name: collect provisioning template pairs
      set_fact:
        os_provisioning_template_pairs: "{{ (os_provisioning_template_pairs | default([])) + [{item.1: item.0.id }] }}"
      loop_control:
        label: "{{ item.0.name }}"
      loop: "{{ os_details.values() | selectattr('provisioning_templates', 'defined') | list | subelements('provisioning_templates') | list }}"

    - name: update foreman provisioning templates
      uri:
        url: "{{ foreman_url }}/api/provisioning_templates/{{ template_id }}"
        method: PUT
        body_format: json
        body:
          provisioning_template:
            id: "{{ template_id }}"
            operatingsystem_ids: "{{ os_ids }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      vars:
        os_ids: "{{ os_provisioning_template_pairs | selectattr(item, 'defined') | map(attribute=item) | flatten | list }}"
        template_id: "{{ foreman_provisioning_template_results | selectattr('name', 'equalto', item) | map(attribute='id') | first }}"
      loop_control:
        label: "{{ item }}"
      loop: "{{ os_details.values() | selectattr('provisioning_templates', 'defined') | map(attribute='provisioning_templates') | flatten | list }}"

    - name: update foreman ptables
      uri:
        url: "{{ foreman_url }}/api/ptables/{{ ptable_id }}"
        method: PUT
        body_format: json
        body:
          ptable:
            id: "{{ ptable_id }}"
            operatingsystem_ids: "{{ os_ids }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      vars:
        os_names: "{{ foreman_os.values() | selectattr('ptable', 'defined') | selectattr('ptable', 'equalto', item) | map(attribute='name') | list }}"
        os_ids: "{{ os_names | map('extract', foreman_os_dict) | map(attribute='id') | list }}"
        ptable_id: "{{ foreman_ptable_results | selectattr('name', 'equalto', item) | map(attribute='id') | first }}"
      loop_control:
        label: "{{ item }}"
      loop: "{{ os_details.values() | selectattr('ptable', 'defined') | map(attribute='ptable') | flatten | list }}"
      when: item in (foreman_ptables.values() | map(attribute='name'))

    - name: update foreman operating systems
      uri:
        url: "{{ foreman_url }}/api/operatingsystems/{{ item.id }}"
        method: PUT
        body_format: json
        body:
          operatingsystem:
            name: "{{ inventory_os.name }}"
            major: "{{ inventory_os.major | default(omit) }}"
            minor: "{{ inventory_os.minor | default(omit) }}"
            description: "{{ inventory_os.description | default(omit) }}"
            family: "{{ inventory_os.family | default(omit) }}"
            release_name: "{{ inventory_os.release_name | default(omit) }}"
            password_hash: "{{ inventory_os.password_hash | default(omit) }}"
            architecture_ids: "{{ foreman_arch_results | selectattr('name', 'equalto', inventory_os.architecture | default('')) | map(attribute='id') | list }}"
            provisioning_template_ids: "{{ inventory_os.provisioning_templates | default([]) | map('extract', foreman_provisioning_template_dict) | map(attribute='id') | list }}"
            medium_ids: "{{ foreman_media_results | selectattr('name', 'equalto', inventory_os.medium | default('')) | map(attribute='id') | list }}"
            ptable_ids: "{{ foreman_ptable_results | selectattr('name', 'equalto', inventory_os.ptable | default('')) | map(attribute='id') | list }}"
            os_family: "{{ inventory_os.os_family | default(omit) }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      loop_control:
        label: "{{ item.name }}"
      vars:
        inventory_os: "{{ foreman_os.values() | selectattr('name', 'equalto', item.name) | first }}"
      loop: "{{ foreman_os_results | flatten(levels=1) }}"

    - name: query foreman os default templates
      uri:
        url: "{{ foreman_url }}/api/operatingsystems/{{ item.id }}/os_default_templates"
        method: GET
        body_format: json
        body:
          per_page: "{{ foreman_api_allpages }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      loop_control:
        label: "{{ item.name }}"
      loop: "{{ foreman_os_results | flatten(levels=1) }}"
      register: foreman_os_deftemplate_query
      tags:
        - deftemplate

    - name: set os default template facts
      set_fact:
        foreman_os_deftemplate_results: "{{ foreman_os_deftemplate_query.results }}"

    - name: delete foreman os default templates
      uri:
        url: "{{ foreman_url }}/api/operatingsystems/{{ item.operatingsystem_id }}/os_default_templates/{{ item.id }}"
        method: DELETE
        body_format: json
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      loop_control:
        label: "{{ item.operatingsystem_name }} {{ item.provisioning_template_name }}"
      loop: "{{ foreman_os_deftemplate_results | map(attribute='json') | map(attribute='results') | flatten }}"

    - name: register foreman os default templates
      uri:
        url: "{{ foreman_url }}/api/operatingsystems/{{ operatingsystem.id }}/os_default_templates"
        method: POST
        body_format: json
        body:
          operatingsystem_id: "{{ operatingsystem.id }}"
          os_default_template:
            provisioning_template_id: "{{ foreman_provisioning_template_dict[provisioning_template].id }}"
            template_kind_id: "{{ foreman_provisioning_template_dict[provisioning_template].template_kind_id }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 201
      loop_control:
        label: "{{ operatingsystem.name }} {{ provisioning_template }}"
      vars:
        operatingsystem: "{{ item.0 }}"
        provisioning_template: "{{ item.1 }}"
      loop: "{{ os_details | subelements('provisioning_templates') }}"
