---
- name: Configure foreman operating systems

  hosts: foreman

  become: yes

  roles:

    - nephelaiio.plugins

  tasks:

    - name: include private variables
      include_vars:
        dir: "../{{ variables }}"

    - name: query foreman architectures
      uri:
        url: "{{ foreman_url }}/api/architectures"
        method: GET
        body_format: json
        body:
          per_page: "{{ foreman_api_allpages }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      register: foreman_arch_query

    - name: query foreman architecture oss
      uri:
        url: "{{ foreman_url }}/api/architectures/{{ item }}"
        method: GET
        body_format: json
        body:
          per_page: "{{ foreman_api_allpages }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      with_items: "{{ foreman_arch_query.json.results | map(attribute='id') | list }}"
      register: foreman_archos_query

    - name: set architecture facts
      set_fact:
        foreman_arch_results: "{{ foreman_arch_query.json.results }}"
        foreman_archos_results: "{{ foreman_archos_query.results | map(attribute='json') | list }}"

    - name: query foreman media
      uri:
        url: "{{ foreman_url }}/api/media"
        method: GET
        body_format: json
        body:
          per_page: "{{ foreman_api_allpages }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      register: foreman_media_query

    - name: set media facts
      set_fact:
        foreman_media_results: "{{ foreman_media_query.json.results }}"

    - name: query foreman configuration templates
      uri:
        url: "{{ foreman_url }}/api/config_templates"
        method: GET
        body_format: json
        body:
          per_page: "{{ foreman_api_allpages }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      register: foreman_config_template_query

    - name: query foreman provisioning templates
      uri:
        url: "{{ foreman_url }}/api/provisioning_templates"
        method: GET
        body_format: json
        body:
          per_page: "{{ foreman_api_allpages }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      register: foreman_provisioning_template_query

    - name: set template facts
      set_fact:
        foreman_provisioning_template_results: "{{ foreman_provisioning_template_query.json.results }}"
        foreman_config_template_results: "{{ foreman_config_template_query.json.results }}"

    - name: query foreman partition templates
      uri:
        url: "{{ foreman_url }}/api/ptables"
        method: GET
        body_format: json
        body:
          per_page: "{{ foreman_api_allpages }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      register: foreman_ptable_query

    - name: set partition table facts
      set_fact:
        foreman_ptable_results: "{{ foreman_ptable_query.json.results }}"

    - name: query foreman operating systems
      uri:
        url: "{{ foreman_url }}/api/operatingsystems"
        method: GET
        body_format: json
        body:
          per_page: "{{ foreman_api_allpages }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      register: foreman_os_query

    - name: set operating system facts
      set_fact:
        foreman_os_results: "{{ foreman_os_query.json.results }}"
        foreman_os_names: "{{ foreman_os_query.json.results | map(attribute='name') | list }}"

    - name: create foreman operating systems
      uri:
        url: "{{ foreman_url }}/api/operatingsystems"
        method: POST
        body_format: json
        body:
          operatingsystem:
            name: "{{ item.name }}"
            major: "{{ item.major | default(omit) }}"
            minor: "{{ item.minor | default(omit) }}"
            description: "{{ item.description | default(omit) }}"
            family: "{{ item.family | default(omit) }}"
            release_name: "{{ item.release_name | default(omit) }}"
            password_hash: "{{ item.password_hash | default(omit) }}"
            architecture_ids: "{{ foreman_arch_results | selectattr('name', 'equalto', inventory_os.architecture | default('')) | map(attribute='id') | list }}"
            medium_ids: "{{ foreman_media_results | selectattr('name', 'equalto', inventory_os.medium | default('')) | map(attribute='id') | list }}"
            ptable_ids: "{{ foreman_ptable_results | selectattr('name', 'equalto', inventory_os.ptable | default('')) | map(attribute='id') | list }}"
            os_family: "{{ item.os_family | default(omit) }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 201
      vars:
        inventory_os: "{{ foreman_os.values() | selectattr('name', 'equalto', item.name) | first }}"
      loop_control:
        label: "{{ item.name }}"
      with_items: "{{ foreman_os.values() | list }}"
      when: item.name not in foreman_os_names

    - name: query foreman operating systems
      uri:
        url: "{{ foreman_url }}/api/operatingsystems"
        method: GET
        body_format: json
        body:
          per_page: "{{ foreman_api_allpages }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      register: foreman_os_query

    - name: merge os facts
      set_fact:
        os_details: "{{ (os_details | default([])) + [inventory | combine(foreman)] }}"
      vars:
        inventory: "{{ item.0 }}"
        foreman: "{{ item.1 }}"
      when: inventory.name == foreman.name
      loop_control: 
        label: "{{ item.0.name }}"
      loop: "{{ foreman_os.values() | product(foreman_os_query.json.results) | list }}"

    - name: collect provisioning templates
      set_fact:
        os_provisioning_template_pairs: "{{ (os_provisioning_template_pairs | default([])) + [[item, oss ]] }}"
      vars:
        oss: "{{ os_details | selectattr('provisioning_template', 'defined') | selectattr('provisioning_template', 'equalto', item ) | map(attribute='id') | list }}"
      loop: "{{ foreman_os.values() | selectattr('provisioning_template', 'defined') | map(attribute='provisioning_template') | unique | list }}"

    - name: collect config templates
      set_fact:
        os_conficonfig_template_pairs: "{{ (os_config_template_pairs | default([])) + [[item, oss ]] }}"
      vars:
        oss: "{{ os_details | selectattr('config_template', 'defined') | selectattr('config_template', 'equalto', item ) | map(attribute='id') | list }}"
      loop: "{{ foreman_os.values() | selectattr('config_template', 'defined') | map(attribute='config_template') | unique | list }}"

    - name: build template maps
      set_fact:
        os_provisioning_templates: "{{ dict(os_provisioning_template_pairs | default([])) }}"
        os_config_templates: "{{ dict(os_config_template_pairs | default([])) }}"

    - name: update foreman provisioning templates
      uri:
        url: "{{ foreman_url }}/api/provisioning_templates/{{ item.id }}"
        method: PUT
        body_format: json
        body:
          provisioning_template: "{{ provisioning_template }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      vars:
        os_ids: "{{ os_provisioning_templates[item.name] }}"
        provisioning_template:
          id: "{{ item.id }}"
          operatingsystem_ids: "{{ os_ids }}"
      when: item.name in os_provisioning_templates
      loop_control:
        label: "{{ item.name }}"
      with_items: "{{ foreman_provisioning_template_results }}"

    - name: update foreman config templates
      uri:
        url: "{{ foreman_url }}/api/config_templates/{{ item.id }}"
        method: PUT
        body_format: json
        body:
          config_template: "{{ config_template }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      vars:
        os_ids: "{{ os_config_templates[item.name] }}"
        config_template:
          id: "{{ item.id }}"
          operatingsystem_ids: "{{ os_ids }}"
      when: item.name in os_config_templates
      loop_control:
        label: "{{ item.name }}"
      with_items: "{{ foreman_config_template_results }}"

    - name: update foreman operating systems
      uri:
        url: "{{ foreman_url }}/api/operatingsystems/{{ item.id }}"
        method: PUT
        body_format: json
        body:
          operatingsystem:
            name: "{{ inventory_os.name }}"
            major: "{{ inventory_os.major | default(omit) }}"
            minor: "{{ inventory_os.minor | default(omit) }}"
            description: "{{ inventory_os.description | default(omit) }}"
            family: "{{ inventory_os.family | default(omit) }}"
            release_name: "{{ inventory_os.release_name | default(omit) }}"
            password_hash: "{{ inventory_os.password_hash | default(omit) }}"
            architecture_ids: "{{ foreman_arch_results | selectattr('name', 'equalto', inventory_os.architecture | default('')) | map(attribute='id') | list }}"
            config_template_ids: "{{ foreman_config_template_results | selectattr('name', 'equalto', inventory_os.config_template | default('')) | map(attribute='id') | list }}"
            provisioning_template_ids: "{{ foreman_provisioning_template_results | selectattr('name', 'equalto', inventory_os.provisioning_template | default('')) | map(attribute='id') | list }}"
            medium_ids: "{{ foreman_media_results | selectattr('name', 'equalto', inventory_os.medium | default('')) | map(attribute='id') | list }}"
            ptable_ids: "{{ foreman_ptable_results | selectattr('name', 'equalto', inventory_os.ptable | default('')) | map(attribute='id') | list }}"
            os_family: "{{ inventory_os.os_family | default(omit) }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      loop_control:
        label: "{{ item.name }}"
      vars:
        inventory_os: "{{ foreman_os.values() | selectattr('name', 'equalto', item.name) | first }}"
      with_items: "{{ foreman_os_results }}"
