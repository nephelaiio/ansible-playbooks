---
- name: Configure pdns proxy

  hosts: foreman_proxy

  become: yes

  roles:

    - nephelaiio.plugins

  tasks:

    - name: include private variables
      include_vars:
        dir: "../{{ variables }}"

    - name: install gem dependencies
      package:
        name:
          - libpq-dev
          - ruby-pg

    - name: install powerdns foreman proxy gems
      gem:
        name: "{{ item }}"
        state: present
        user_install: no
      with_items:
        - smart_proxy_dns_powerdns
      notify: restart foreman proxy

    - name: update powerdns bundler gems
      copy:
        content: "gem 'smart_proxy_dns_powerdns'"
        dest: /usr/share/foreman-proxy/bundler.d/dns_powerdns.rb
      notify: restart foreman proxy

    - name: manage foreman proxy configuration
      copy:
        dest: /etc/foreman-proxy/settings.d/dns.yml
        content: |
          ---
          {{ settings_yaml | to_nice_yaml(indent=2) }}
        mode: 0640
        owner: "{{ foreman_proxy_user }}"
        group: "{{ foreman_proxy_group }}"
      vars:
        settings_yaml:
          :enabled: true
          :use_provider: dns_powerdns
      notify:
        - restart foreman proxy

    - name: manage foreman proxy configuration
      copy:
        dest: /etc/foreman-proxy/settings.d/dns_powerdns.yml
        content: |
          ---
          {{ settings_yaml | to_nice_yaml(indent=2) }}
        mode: 0640
        owner: "{{ foreman_proxy_user }}"
        group: "{{ foreman_proxy_group }}"
      vars:
        settings_yaml:
          :powerdns_backend: rest
          :powerdns_rest_url: "{{ pdns_url }}/api/v1/servers/localhost"
          :powerdns_rest_api_key: "{{ pdns_api_key }}"
      notify:
        - restart foreman proxy

    - name: query foreman proxies
      uri:
        url: "{{ foreman_url }}/api/smart_proxies"
        method: GET
        body_format: json
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      register: foreman_proxy_query

    - name: set proxy facts
      set_fact:
        foreman_proxy_urls: "{{ foreman_proxy_query.json.results | map(attribute='url') | list }}"
        foreman_proxy_url: "http://{{ ansible_hostname }}:{{ foreman_proxy_port }}"

    - meta: flush_handlers

    - block:

        - name: register foreman proxy
          uri:
            url: "{{ foreman_url }}/api/smart_proxies"
            method: POST
            body_format: json
            body:
              smart_proxy:
                name: "{{ ansible_hostname }}"
                url: "{{ foreman_proxy_url }}"
            user: "{{ foreman_api_user }}"
            password: "{{ foreman_api_pass }}"
            force_basic_auth: yes
            status_code: 201
          register: foreman_proxy_register

        - name: set proxy facts
          set_fact:
            foreman_proxy_id: "{{ foreman_proxy_register.json.id }}"

      when: foreman_proxy_url not in foreman_proxy_urls

    - block:

        - name: set proxy facts
          set_fact:
            foreman_proxy_id: "{{ foreman_proxy_query.json.results | selectattr('url', 'equalto', foreman_proxy_url) | map(attribute='id') | first }}"

        - name: update foreman proxy
          uri:
            url: "{{ foreman_url }}/api/smart_proxies/{{ foreman_proxy_id }}"
            method: PUT
            body_format: json
            body:
              smart_proxy:
                name: "{{ ansible_hostname }}"
                url: "{{ foreman_proxy_url }}"
            user: "{{ foreman_api_user }}"
            password: "{{ foreman_api_pass }}"
            force_basic_auth: yes
            status_code: 200

      when: foreman_proxy_url in foreman_proxy_urls

    - name: refresh foreman proxy
      uri:
        url: "{{ foreman_url }}/api/smart_proxies/{{ foreman_proxy_id }}/refresh"
        method: PUT
        body_format: json
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200

  handlers:

    - name: restart foreman proxy
      service:
        name: foreman-proxy
        state: restarted
