---
- name: Configure foreman networks

  hosts: foreman_app

  become: yes

  roles:

    - nephelaiio.plugins

  tasks:

    - name: include private variables
      include_vars:
        dir: "../{{ variables }}"

    - name: query foreman organizations
      uri:
        url: "{{ foreman_url }}/api/organizations"
        method: GET
        body_format: json
        body:
          per_page: "{{ foreman_api_allpages }}"
        force_basic_auth: yes
        user: "{{ foreman_admin_user }}"
        password: "{{ foreman_admin_pass }}"
      register: foreman_organization_query

    - name: query foreman locations
      uri:
        url: "{{ foreman_url }}/api/locations"
        method: GET
        body_format: json
        body:
          per_page: "{{ foreman_api_allpages }}"
        force_basic_auth: yes
        user: "{{ foreman_admin_user }}"
        password: "{{ foreman_admin_pass }}"
      register: foreman_location_query

    - name: set organization/location facts
      set_fact:
        foreman_organization_results: "{{ foreman_organization_query.json.results }}"
        foreman_location_results: "{{ foreman_location_query.json.results }}"

    - name: set organization dict
      set_fact:
        foreman_organization_dict: "{{ (foreman_organization_dict | default({})) | combine({ item.name: item }) }}"
      loop_control:
        label: "{{ item.name }}"
      loop: "{{ foreman_organization_results | flatten(levels=1) }}"

    - name: set location dict
      set_fact:
        foreman_location_dict: "{{ (foreman_location_dict | default({})) | combine({ item.name: item }) }}"
      loop_control:
        label: "{{ item.name }}"
      loop: "{{ foreman_location_results | flatten(levels=1) }}"

    - name: query foreman domains
      uri:
        url: "{{ foreman_url }}/api/domains"
        method: GET
        body_format: json
        body:
          per_page: "{{ foreman_api_allpages }}"
        force_basic_auth: yes
        user: "{{ foreman_admin_user }}"
        password: "{{ foreman_admin_pass }}"
      register: foreman_domain_query

    - name: set domain facts
      set_fact:
        foreman_domain_results: "{{ foreman_domain_query.json.results }}"
        foreman_domain_names: "{{ foreman_domain_query.json.results | map(attribute='name') | list }}"

    - name: create foreman domains
      uri:
        url: "{{ foreman_url }}/api/domains"
        method: POST
        body_format: json
        body:
          domain:
            name: "{{ item.name }}"
            location_ids: "{{ domain_location_ids }}"
            organization_ids: "{{ domain_organization_ids }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 201
      vars:
        domain_location_ids: "{{ item.foreman_locations | default([]) | map('extract', foreman_location_dict) | map(attribute='id') | list }}"
        domain_organization_ids: "{{ item.foreman_organizations | default([]) | map('extract', foreman_organization_dict) | map(attribute='id') | list }}"
      loop_control:
        label: "{{ item.name }}"
      loop: "{{ foreman_domains | flatten(levels=1) }}"
      when: item.name not in foreman_domain_names

    - name: update foreman domains
      uri:
        url: "{{ foreman_url }}/api/domains/{{ item.id }}"
        method: PUT
        body_format: json
        body:
          domain:
            name: "{{ item.name }}"
            location_ids: "{{ domain_location_ids }}"
            organization_ids: "{{ domain_organization_ids }}"
        user: "{{ foreman_api_user }}"
        password: "{{ foreman_api_pass }}"
        force_basic_auth: yes
        status_code: 200
      vars:
        inventory_domain: "{{ foreman_domains | selectattr('name', 'equalto', item.name) | first }}"
        domain_location_ids: "{{ inventory_domain.foreman_locations | default([]) | map('extract', foreman_location_dict) | map(attribute='id') | list }}"
        domain_organization_ids: "{{ inventory_domain.foreman_organizations | default([]) | map('extract', foreman_organization_dict) | map(attribute='id') | list }}"
      loop_control:
        label: "{{ item.name }}"
      loop: "{{ foreman_domain_results | flatten(levels=1) }}"
      when: item.name in foreman_domain_names
