---
- name: Install foreman

  hosts: foreman_app

  become: yes

  roles:

    - nephelaiio.plugins

  vars:

    mariadb_mirror: yum.mariadb.org
    mariadb_version: 10.2
    mariadb_pid_file: /var/run/mariadb/mariadb/pid
    passenger_server_name: "{{ nginx_certificate_hostname }}"
    passenger_app_env: production
    passenger_app_root: /usr/share/foreman/public
    foreman_conf_dir: /etc/foreman
    foreman_web_root: /usr/share/foreman/public
    foreman_db_host: 127.0.0.1
    foreman_permissions_reset: no
    foreman_api_allpages: 9999999999
    nginx_user: "{{ foreman_nginx_user }}"
    nginx_conf_dir: /etc/nginx
    nginx_vhost_dir: "{{ nginx_conf_dir }}/sites-enabled"
    nginx_ssl_dir: "{{ nginx_conf_dir }}/ssl"
    nginx_certificate_hostname: "{{ foreman_hostname }}"
    nginx_certificate_chainfile: "{{ nginx_conf_dir }}/{{ nginx_certificate_hostname }}.chain.crt"
    nginx_certificate_keyfile: "{{ nginx_conf_dir }}/{{ nginx_certificate_hostname }}.key"
    host_certificate_hostname: "{{ ansible_fqdn }}"
    host_certificate_chainfile: "{{ foreman_conf_dir }}/{{ host_certificate_hostname }}.chain.crt"
    host_certificate_keyfile: "{{ foreman_conf_dir }}/{{ host_certificate_hostname }}.key"

  tasks:

    - name: include variable overrides
      include_vars: "{{ item }}"
      with_first_found:
        - files:
            - "vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
            - "vars/{{ ansible_distribution }}.yml"
            - "vars/{{ ansible_os_family }}.yml"
            - "vars/default.yml"
      run_once: yes

    - block:

        - name: install foreman apt key
          apt_key:
            url: https://deb.theforeman.org/pubkey.gpg
            id: 6F8600B9563278F6

        - name: install foreman apt repository
          apt_repository:
            repo: "deb http://deb.theforeman.org/ {{ ansible_lsb.codename }} {{ foreman_release }}"
            state: present
            update_cache: yes

        - name: install passenger apt key
          apt_key:
            keyserver: keyserver.ubuntu.com
            id: 561F9B9CAC40B2F7

        - name: install passenger apt repository
          apt_repository:
            repo: "deb https://oss-binaries.phusionpassenger.com/apt/passenger {{ ansible_lsb.codename }} main"
            state: present
            update_cache: yes

      when: ansible_os_family == 'Debian'

    - block:

        - name: install epel
          include_role:
            name: geerlingguy.repo-epel

        - name: install foreman yum repository
          yum:
            name: https://yum.theforeman.org/releases/1.21/el7/x86_64/foreman-release.rpm

        - name: install foreman scl
          package:
            name:
              - foreman-release-scl

        - name: install mariadb yum repository
          yum_repository:
            name: mariadb
            description: Official MariaDB repository
            baseurl: "http://{{ mariadb_mirror }}/{{ mariadb_version }}/{{ ansible_distribution|lower|regex_replace('redhat', 'rhel')|regex_replace('oraclelinux', 'centos') }}{{ ansible_distribution_major_version }}-amd64"
            gpgkey: https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
            gpgcheck: true

        - name: install passenger yum repository
          yum_repository:
            description: Official Physion Passenger repository
            name: passenger
            baseurl: https://oss-binaries.phusionpassenger.com/yum/passenger/el/$releasever/$basearch
            gpgcheck: false
            gpgkey: https://packagecloud.io/phusion/passenger/gpgkey

      when: ansible_os_family == 'RedHat'

    - name: install foreman packages
      package:
        name: "{{ foreman_packages }}"

    - name: install postgresql
      include_role:
        name: geerlingguy.postgresql
      vars:
        postgresql_databases:
          - name: "{{ foreman_db_name }}"
        postgresql_users:
          - name: "{{ foreman_db_user }}"
            password: "{{ foreman_db_pass }}"
            encrypted: yes

    - name: set {{ foreman_db_name }} table access
      postgresql_privs:
        db: "{{ foreman_db_name }}"
        role: "{{ foreman_db_user }}"
        objs: ALL_IN_SCHEMA
        privs: SELECT,INSERT,UPDATE,DELETE
        type: table
      become_user: postgres

    - name: configure database
      copy:
        dest: "{{ foreman_conf_dir }}/database.yml"
        content: |
          {{ database_yaml | to_nice_yaml(indent=2) }}
        mode: 0640
        owner: "{{ foreman_user }}"
        group: "{{ foreman_group }}"
      vars:
        database_yaml:
          production:
            adapter: postgresql
            database: "{{ foreman_db_name }}"
            username: "{{ foreman_db_user }}"
            password: "{{ foreman_db_pass }}"
            host: "{{ foreman_db_host }}"
      notify: rake

    - meta: flush_handlers

    - include_role:
        name: nephelaiio.acme_certificate_route53
      vars:
        acme_certificate_domain: "{{ nginx_certificate_hostname }}"
        acme_certificate_chainfile: "{{ nginx_certificate_chainfile }}"
        acme_certificate_keyfile: "{{ nginx_certificate_keyfile }}"
        acme_certificate_add_ca: yes
        acme_certificate_aws_accesskey_id: "{{ aws_access_key_id }}"
        acme_certificate_aws_accesskey_secret: "{{ aws_secret_access_key }}"

    - name: configure settings
      copy:
        dest: "{{ foreman_conf_dir }}/settings.yaml"
        content: |
          {{ settings_yaml | to_nice_yaml(indent=2) }}
        mode: 0640
        owner: "{{ foreman_user }}"
        group: "{{ foreman_group }}"
      vars:
        foreman_ssl_settings:
          :ssl_ca_file: "{{ acme_os_ca_file }}"
          :ssl_certificate: "{{ host_certificate_chainfile }}"
          :ssl_priv_key: "{{ host_certificate_keyfile }}"
        settings_yaml: "{{ foreman_settings | combine(foreman_ssl_settings) }}"
      notify: restart nginx

    - name: install passenger
      package:
        name: "{{ foreman_passenger_packages }}"

    - name: configure nginx
      include_role:
        name: geerlingguy.nginx
      vars:
        nginx_extra_conf_options: |
          load_module /usr/lib/nginx/modules/ngx_http_passenger_module.so;
        nginx_remove_default_vhost: true
        nginx_vhosts:
          - listen: "80 default_server"
            server_name: "{{ nginx_certificate_hostname }}"
            filename: "{{ nginx_certificate_hostname }}.http.conf"
            root: "{{ foreman_web_root }}"
            access_log: "/var/log/nginx/{{ nginx_certificate_hostname }}.access.log"
            error_log: "/var/log/nginx/{{ nginx_certificate_hostname }}.error.log"
            extra_parameters: |
              passenger_enabled on;
              passenger_app_env production;
          - listen: "443 ssl"
            server_name: "{{ nginx_certificate_hostname }}"
            filename: "{{ nginx_certificate_hostname }}.https.conf"
            access_log: "/var/log/nginx/{{ nginx_certificate_hostname }}.access.log"
            error_log: "/var/log/nginx/{{ nginx_certificate_hostname }}.error.log"
            extra_parameters: |
              keepalive_timeout   300;
              ssl_certificate {{ nginx_certificate_chainfile }};
              ssl_certificate_key {{ nginx_certificate_keyfile }};
              ssl_session_cache   shared:SSL:10m;
              ssl_session_timeout 10m;
              ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
              ssl_prefer_server_ciphers on;
              ssl_stapling on;
              ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA;
              charset utf-8;
              gzip on;
              gzip_types text/css application/javascript text/javascript application/x-javascript image/svg+xml text/plain text/xsd text/xsl text/xml image/x-icon;

              location / {
                proxy_pass http://{{ foreman_hostname }}/;
                proxy_http_version 1.1;
                proxy_set_header   Host               $host;
                proxy_set_header   X-Real-IP          $remote_addr;
                proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Proto  $scheme;
                proxy_set_header   Upgrade            $http_upgrade;
                proxy_set_header   Connection         "upgrade";
              }

    - name: add nginx user to foreman group
      user:
        name: "{{ nginx_user }}"
        group: "{{ foreman_group }}"
        append: yes
      notify: restart nginx

    - name: update foreman pdns record
      uri:
        url: "{{ pdns_url }}/api/v1/servers/localhost/zones/{{ foreman_url_zone }}"
        method: PATCH
        return_content: yes
        body_format: json
        body:
          rrsets:
            - name: "{{ foreman_url_host }}"
              type: A
              ttl: 3600
              changetype: REPLACE
              records:
                - content: "{{ ansible_default_ipv4.address }}"
                  disabled: no
                  set-ptr: no
                  comments: []
        headers:
          X-API-Key: "{{ pdns_api_key }}"
        status_code: 204
      vars:
        foreman_url_host: "{{ nginx_certificate_hostname }}."
        foreman_url_zone: "{{ foreman_domain }}"

    - meta: flush_handlers

    - name: query foreman users
      uri:
        url: "{{ foreman_url }}/api/users"
        method: GET
        body_format: json
        body:
          per_page: "{{ foreman_api_allpages }}"
        force_basic_auth: yes
        user: "{{ foreman_admin_user }}"
        password: "{{ foreman_admin_pass }}"
      register: foreman_user_query
      ignore_errors: yes

    - name: rake permissions:reset
      command: /usr/sbin/foreman-rake permissions:reset
      register: handler_permissions_reset
      when: foreman_user_query is failed

    - name: override admin credentials
      set_fact:
        foreman_permissions_reset: true
        reset_admin_user: "{{ ((handler_permissions_reset.stdout | split_with(' '))[3])[0:-1] }}"
        reset_admin_pass: "{{ (handler_permissions_reset.stdout | split_with(' '))[5] }}"
      when: foreman_user_query is failed

    - name: query foreman users
      uri:
        url: "{{ foreman_url }}/api/users"
        method: GET
        body_format: json
        body:
          per_page: "{{ foreman_api_allpages }}"
        force_basic_auth: yes
        user: "{{ reset_admin_user }}"
        password: "{{ reset_admin_pass }}"
      register: foreman_reset_query
      when: foreman_user_query is failed

    - name: set admin user facts
      set_fact:
        foreman_admin: "{{ foreman_reset_query.json.results | selectattr('login', 'equalto', foreman_admin_user) |  first }}"
        foreman_reset:
          password: "{{ foreman_admin_pass }}"
      when: foreman_user_query is failed

    - name: set admin foreman password
      uri:
        url: "{{ foreman_url }}/api/users/{{ foreman_admin.id }}"
        method: PUT
        body_format: json
        body:
          user:
            current_password: "{{ reset_admin_pass }}"
            password: "{{ foreman_admin_pass }}"
            password_confirmation: "{{ foreman_admin_pass }}"
        force_basic_auth: yes
        user: "{{ reset_admin_user }}"
        password: "{{ reset_admin_pass }}"
      when: foreman_user_query is failed

    - block:

        - name: query foreman organizations
          uri:
            url: "{{ foreman_url }}/api/organizations"
            method: GET
            body_format: json
            body:
              per_page: "{{ foreman_api_allpages }}"
            force_basic_auth: yes
            user: "{{ foreman_admin_user }}"
            password: "{{ foreman_admin_pass }}"
          register: foreman_organization_query

        - name: set organization facts
          set_fact:
            foreman_organization_names: "{{ foreman_organization_query.json.results | map(attribute='name') | list }}"
            foreman_organization_results: "{{ foreman_organization_query.json.results }}"

        - name: destroy default organization
          uri:
            url: "{{ foreman_url }}/api/organizations/{{ organization_id }}"
            method: DELETE
            body_format: json
            user: "{{ foreman_api_user }}"
            password: "{{ foreman_api_pass }}"
            force_basic_auth: yes
            status_code: 200
          vars:
            organization_id: "{{ foreman_organization.id }}"
          loop_control:
            loop_var: foreman_organization
            label: "{{ foreman_organization.name }}"
          with_items: "{{ foreman_organization_results | selectattr('name', 'equalto', 'Default Organization') | list }}"

        - name: create foreman organizations
          uri:
            url: "{{ foreman_url }}/api/organizations"
            method: POST
            body_format: json
            body:
              organization:
                name: "{{ item.name }}"
            user: "{{ foreman_api_user }}"
            password: "{{ foreman_api_pass }}"
            force_basic_auth: yes
            status_code: 201
          with_items: "{{ foreman_organizations.values() | list }}"
          when: item.name not in foreman_organization_names

        - name: query foreman organizations
          uri:
            url: "{{ foreman_url }}/api/organizations"
            method: GET
            body_format: json
            body:
              per_page: "{{ foreman_api_allpages }}"
            force_basic_auth: yes
            user: "{{ foreman_admin_user }}"
            password: "{{ foreman_admin_pass }}"
          register: foreman_organization_query

        - name: query foreman locations
          uri:
            url: "{{ foreman_url }}/api/locations"
            method: GET
            body_format: json
            body:
              per_page: "{{ foreman_api_allpages }}"
            force_basic_auth: yes
            user: "{{ foreman_admin_user }}"
            password: "{{ foreman_admin_pass }}"
          register: foreman_location_query

        - name: set organization/location facts
          set_fact:
            foreman_organization_names: "{{ foreman_organization_query.json.results | map(attribute='name') | list }}"
            foreman_organization_results: "{{ foreman_organization_query.json.results }}"
            foreman_location_names: "{{ foreman_location_query.json.results | map(attribute='name') | list }}"
            foreman_location_results: "{{ foreman_location_query.json.results }}"

        - name: destroy default location
          uri:
            url: "{{ foreman_url }}/api/locations/{{ location_id }}"
            method: DELETE
            body_format: json
            user: "{{ foreman_api_user }}"
            password: "{{ foreman_api_pass }}"
            force_basic_auth: yes
            status_code: 200
          vars:
            location_id: "{{ foreman_location.id }}"
          loop_control:
            loop_var: foreman_location
            label: "{{ foreman_location.name }}"
          with_items: "{{ foreman_location_results | selectattr('name', 'equalto', 'Default Location') | list }}"

        - name: create foreman locations
          uri:
            url: "{{ foreman_url }}/api/locations"
            method: POST
            body_format: json
            body:
              location:
                name: "{{ item.name }}"
                organization_id: "{{ organization_id }}"
            user: "{{ foreman_api_user }}"
            password: "{{ foreman_api_pass }}"
            force_basic_auth: yes
            status_code: 201
          vars:
            organization_id: "{{ foreman_organization_results | selectattr('name', 'equalto', item.organization) | map(attribute='name') | first }}"
          with_items: "{{ foreman_locations.values() | list }}"
          when: item.name not in foreman_location_names

      delegate_to: localhost

    - name: notify of credential changes
      debug:
        msg: "{{ handler_permissions_reset.stdout }}"
      when: foreman_permissions_reset | bool

  handlers:

    - name: restart nginx
      service:
        name: nginx
        state: restarted

    - name: rake migrate
      command: /usr/sbin/foreman-rake db:migrate
      listen: rake

    - name: rake seed
      command: foreman-rake db:seed
      listen: rake

    - name: rake apipie
      command: foreman-rake apipie:cache
      listen: rake
