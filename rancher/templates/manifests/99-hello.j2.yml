---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ rke_hello_namespace }}

---
apiVersion: v1
kind: Service
metadata:
  name: hello
  namespace: {{ rke_hello_namespace }}
spec:
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: hello

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello
  namespace: {{ rke_hello_namespace }}
spec:
  selector:
    matchLabels:
      app: hello
  replicas: 2
  template:
    metadata:
      labels:
        app: hello
    spec:
      containers:
        - name: hello
          image: paulbouwer/hello-kubernetes:1.7
          ports:
            - containerPort: 8080

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  namespace: {{ rke_hello_namespace }}
  name: hello
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: {{ rke_certmanager_issuer_name }}
spec:
  tls:
    - hosts:
        - hello.home.nephelai.io
      secretName: hello.home.nephelai.io
  rules:
    - host: hello.home.nephelai.io
      http:
        paths:
          - backend:
              serviceName: hello
              servicePort: 80

---
apiVersion: v1
kind: Secret
metadata:
  name: hello-secret
  namespace: {{ rke_hello_namespace }}
type: Opaque
data:
  cert.pem: "{{ cloudflare_argo_cert | b64encode }}"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: hello
  name: hello-argo
  namespace: {{ rke_hello_namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: argo
  template:
    metadata:
      labels:
        app: argo
    spec:
      containers:
        - name: tunnel
          image: docker.io/cloudflare/cloudflared:2020.8.0
          imagePullPolicy: Always
          command: ["cloudflared", "tunnel"]
          args:
            - --url=http://hello.{{ rke_hello_namespace }}.svc.cluster.local:80
            - --hostname=hello.nephelai.io
            - --origincert=/etc/cloudflared/cert.pem
            - --no-autoupdate
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            limits:
              cpu: 100m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - mountPath: /etc/cloudflared
              name: hello-secret-vol
              readOnly: true
      terminationGracePeriodSeconds: 60
      volumes:
        - name: hello-secret-vol
          secret:
            secretName: hello-secret
