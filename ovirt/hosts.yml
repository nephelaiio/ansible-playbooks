---
- name: Prepare ovirt host os

  hosts: ovirt_hosts

  become: yes

  serial: 1

  tasks:

    - name: enable firewall
      service:
        name: firewalld
        state: started
        enabled: yes
      tags:
        - firewall

    - name: manage selinux state
      selinux:
        policy: targeted
        state: permissive
      notify: reboot node

    - name: flush handlers
      meta: flush_handlers

  handlers:

    - name: reboot node
      reboot:



- name: Install ovirt hosts

  hosts: ovirt_hosts

  become: yes

  vars:

    ovirt_host_ips: "{{ groups['ovirt_hosts'] | map('extract', hostvars, ['ansible_default_ipv4', 'address']) | list  }}"
    ovirt_datastore_name: data
    ovirt_datastore_path: /mnt/gluster/data
    ovirt_datastore_brick: "{{ ovirt_datastore_path }}/brick"
    ovirt_pvs:
      - /dev/sda
    ovirt_vgname: vg_ovirt
    ovirt_tpname: tp_ovirt
    ovirt_tpsize: '464G'
    ovirt_tpmdsize: '8G'
    gluster_owner_gid: '36'
    gluster_owner_uid: '36'
    gluster_infra_fw_enabled: no

  roles:

    - role: nephelaiio.plugins
    - role: nephelaiio.pip
    - role: linux-system-roles.network
      when: ansible_default_ipv4.interface != 'br0'
    - role: ovirt.repositories
    - role: linux-system-roles.cockpit

  pre_tasks:

    - name: create gluster mount directories
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - "{{ ovirt_datastore_path | dirname }}"
        - "{{ ovirt_datastore_path }}"
        - "{{ ovirt_datastore_brick | dirname }}"
        - "{{ ovirt_datastore_brick }}"
      when: ovirt_gluster_enable
      tags:
        - volume

    - name: install cockpit
      package:
        name: cockpit
      tags:
        - cockpit

    - name: create cockpit firewall rule
      firewalld:
        service: cockpit
        permanent: yes
        state: enabled
      tags:
        - cockpit
        - firewall
      notify: restart firewalld

    - name: start cockpit
      service:
        name: cockpit
        state: started
        enabled: yes
      tags:
        - cockpit

    - meta: flush_handlers

  tasks:

    - name: install ovirt cockpit dashboard
      package:
        name: cockpit-ovirt-dashboard
      notify: restart cockpit

    - name: install ovirt engine appliance
      package:
        name: ovirt-engine-appliance
      notify: restart cockpit

    - block:

        - name: configure gluster
          include_role:
            name: gluster.infra
          vars:
            gluster_infra_disktype: JBOD
            gluster_infra_volume_groups:
              - vgname: "{{ ovirt_vgname }}"
                pvname: "{{ [ovirt_pvs] | flatten | join_with(',') }}"
            gluster_infra_thinpools:
              - vgname: "{{ ovirt_vgname }}"
                thinpoolname: "{{ ovirt_tpname }}"
                poolmetadatasize: "{{ ovirt_tpmdsize }}"
            gluster_infra_lv_logicalvols:
              - vgname: "{{ ovirt_vgname }}"
                thinpool: "{{ ovirt_tpname }}"
                lvname: "{{ ovirt_datastore_name }}"
                lvsize: "{{ ovirt_tpsize }}"
            gluster_infra_mount_devices:
              - path: "{{ ovirt_datastore_path }}"
                vgname: "{{ ovirt_vgname }}"
                lvname: "{{ ovirt_datastore_name }}"
            fstrim_service:
              enabled: yes
              schedule:
                hour: "{{ range(1, 4) | random() }}"

        - name: install gluster service
          package:
            name: glusterfs-server

        - name: start glusterd
          service:
            name: glusterd
            state: started
            enabled: yes

        - name: create gluster firewall rule
          firewalld:
            service: glusterfs
            permanent: yes
            state: enabled
          tags:
            - cockpit
            - firewall
          notify: restart firewalld

        - meta: flush_handlers

        - name: create gluster volume
          gluster_volume:
            volume: "{{ ovirt_datastore_name }}"
            state: present
            bricks: "{{ ovirt_datastore_brick }}"
            cluster: "{{ ovirt_host_ips }}"
            replicas: 3
            options:
              storage.owner-gid: "{{ gluster_owner_gid }}"
              storage.owner-uid: "{{ gluster_owner_uid }}"
          run_once: yes
          tags:
            - volume

      when: ovirt_gluster_enable | default('yes') | bool

  post_tasks:

    - block:

        - name: register host
          include_role:
            name: ovirt.hosts
          vars:
            hosts:
              - name: "{{ ansible_fqdn }}"
                address: "{{ ansible_fqdn }}"
                cluster: "{{ ovirt_cluster }}"
                password: "{{ ovirt_user_pass }}"

      when: ovirt_register_host | default('no') | bool
      delegate_to: localhost

  handlers:

    - name: restart cockpit
      service:
        name: cockpit
        state: restarted
      tags:
        - cockpit

    - name: restart firewalld
      service:
        name: firewalld
        state: reloaded
      tags:
        - cockpit
        - firewalld
