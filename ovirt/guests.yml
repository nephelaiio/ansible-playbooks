- name: Create ovirt centos guests

  hosts: ovirt_guests

  gather_facts: no

  vars:

    ovirt_state_default: running

  roles:

    - nephelaiio.plugins

  tasks:

    - block:

        - name: install ovirt sdk
          pip:
            name: ovirt-engine-sdk-python
          changed_when: false
          run_once: yes
          become: yes

        - name: set vm profile facts
          set_fact:
            vm_profile_template: "{{ ovirt_profiles[hostvars[inventory_hostname].vm_profile | default(default_vm_profile)] }}"
            vm_attr_defaults:
              name: "{{ inventory_hostname }}"
              vm_state: "{{ ovirt_state_default }}"
            vm_hostvars: "{{ hostvars[inventory_hostname] }}"
          tags:
            - always

        - name: set vm profile
          set_fact:
            vm: "{{ vm_profile_template | combine(vm_attr_defaults, vm_hostvars, recursive=true) }}"
          tags:
            - always

        - block:

            - name: stop ovirt vm
              ovirt_vm:
                name: "{{ vm.name }}"
                cluster: "{{ vm.ovirt_cluster }}"
                auth: "{{ vm.ovirt_auth }}"
                state: stopped
                wait: yes

            - name: destroy ovirt vm
              ovirt_vm:
                name: "{{ vm.name }}"
                cluster: "{{ vm.ovirt_cluster }}"
                auth: "{{ vm.ovirt_auth }}"
                state: absent
                wait: yes

            - name: wait for vms to be destroyed
              pause:
                seconds: 5

          when: vm.vm_state | default('present') == 'recreate'

        - name: create ovirt vm
          ovirt_vm:
            name: "{{ ovirt_vm.name }}"
            cluster: "{{ ovirt_vm.cluster }}"
            auth: "{{ ovirt_vm.ovirt_auth }}"
            state: "{{ ovirt_vm.state }}"
            cloud_init: "{{ ovirt_vm.cloud_init }}"
            cpu_cores: "{{ ovirt_vm.vm_cpu }}"
            high_availability: "{{ ovirt_vm.high_availability }}"
            template: "{{ ovirt_vm.template }}"
            operating_system: "{{ ovirt_vm.ovirt_os | default('other_linux') }}"
            nics: "{{ ovirt_vm.nics }}"
            type: server
            serial_console: yes
            wait: yes
          vars:
            ovirt_vm: "{{ vm | combine(vm_attrs) }}"
            vm_network: "{{ nets[vm.vm_network] }}"
            vm_template: "{{ vm.vm_template | default(ovirt_template_default) }}"
            vm_attrs:
              state: "{{ (vm.vm_state != 'recreate') | ternary(vm.vm_state, 'running') }}"
              cluster: "{{ vm.ovirt_cluster }}"
              cores: "{{ vm.vm_cpu }}"
              memory: "{{ vm.vm_memory }}"
              template: "{{ vm_template }}"
              high_availability: true
              nics:
                - name: nic1
                  network: "{{ vm_network.name }}"
                  profile: "{{ vm_network.name }}"
              cloud_init:
                host_name: "{{ vm.inventory_hostname }}"
                timezone: "{{ vm.ovirt_guest_timezone }}"
                user_name: "{{ vm.ovirt_guest_user }}"
                root_password: "{{ vm.ovirt_guest_pass }}"
                authorized_ssh_keys: "{{ vm.ovirt_guest_pubkey }}"
                regenerate_ssh_keys: true
                dns_servers: "{{ vm_network.ns | join(' ') }}"
                nic_boot_protocol: static
                nic_ip_address: "{{ vm.ansible_host }}"
                nic_netmask: "{{ vm_network.netmask }}"
                nic_gateway: "{{ vm_network.router }}"
                nic_name: "{{ ovirt_templates[vm_template].iface }}"
                nic_on_boot: yes
          no_log: "{{ ovirt_nolog | default(true) }}"

        - name: manage vm nic network
          ovirt_nic:
            state: plugged
            name: nic1
            vm: "{{ vm.name }}"
            auth: "{{ vm.ovirt_auth }}"
            network: "{{ vm_network.name }}"
            profile: "{{ vm_network.name }}"
          vars:
            vm_network: "{{ nets[vm.vm_network] }}"
          no_log: "{{ ovirt_nolog | default(true) }}"
          when: vm.vm_state in ['present', 'running', 'recreate']

      delegate_to: localhost

    - name: wait for provisioning to complete
      wait_for_connection:

    - name: gather facts
      setup:

    - block:

        - name: install ovirt guest agent apt package
          apt:
            name: "{{ ovirt_templates[vm_template].agent }}"
            update_cache: yes

      when:
        - ansible_os_family | lower == 'debian'
        - "'agent' in ovirt_templates[vm_template]"
      become: yes

    - block:

        - name: install epel
          yum:
            name: epel-release

        - name: install ovirt guest agent yum package
          yum:
            name: "{{ ovirt_templates[vm_template].agent }}"

      when:
        - ansible_os_family | lower == 'redhat'
        - "'agent' in ovirt_templates[vm_template]"
      become: yes

    - name: start ovirt guest agent
      service:
        name: "{{ ovirt_templates[vm_template].agent }}"
        state: started
        enabled: yes
      become: yes

