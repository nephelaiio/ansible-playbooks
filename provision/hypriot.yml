---
- name: create hypriot customization files files

  hosts: hypriot

  gather_facts: no

  vars:

    hypriot_target_path: "{{ playbook_dir }}/../files/hypriot"
    hypriot_ip: "{{ ansible_host }}/{{ nets[host_network].netmask }}"
    hypriot_gw: "{{ nets[host_network].router }}"
    hypriot_ns: "{{ nets[host_network].ns }}"

  roles:

    - nephelaiio.plugins

  tasks:

    - block:

        - block:

            - name: scan hypriot flash releases
              uri:
                url: https://api.github.com/repos/hypriot/flash/releases
                return_content: yes
              register: hypriot_flash_releases
              changed_when: false

            - name: determine latest release for hypriot flash
              set_fact:
                hypriot_flash_latest: "{{ (hypriot_flash_releases.json | first).tag_name }}"

            - name: "install hypriot flash tool {{ hypriot_flash_release | default(hypriot_flash_latest) }}"
              get_url:
                url: "https://github.com/hypriot/flash/releases/download/{{ hypriot_flash_release | default(hypriot_flash_latest) }}/flash"
                owner: root
                group: root
                mode: 775
                dest: /usr/local/bin/flash
              become: yes

            - name: scan hypriot os releases
              uri:
                url: https://api.github.com/repos/hypriot/image-builder-rpi/releases
                return_content: yes
              register: hypriot_os_releases
              changed_when: false

            - block:

                - name: fetch explicit release for hypriot os
                  set_fact:
                    hypriot_os_targets: "{{ hypriot_os_releases.json | selectattr('tag_name', 'equalto', hypriot_os_release) | list }}"

                - name: verify hypriot os explicit release
                  fail:
                    msg: "hypriot release {{ hypriot_os_release }} not found"
                  when: hypriot_os_targets | length == 0

                - name: set hypriot explicit target release
                  set_fact:
                    hypriot_os_explicit: "{{ hypriot_os_releases.json | selectattr('tag_name', 'equalto', hypriot_os_release) | list }}"

              when: hypriot_os_release is defined

            - name: determine latest release for hypriot os
              set_fact:
                hypriot_os_latest: "{{ hypriot_os_releases.json | first }}"

            - name: determine latest release for hypriot os
              set_fact:
                hypriot_os_target: "{{ hypriot_os_explicit | default(hypriot_os_latest) }}"

            - name: extract hypriot os urls
              set_fact:
                hypriot_os_urls: "{{ hypriot_os_target.assets | list }}"

            - name: extract hypriot os metadata
              set_fact:
                hypriot_os_target_url: "{{ hypriot_os_urls | selectattr('browser_download_url', 'match', '.*zip$') | first }}"
                hypriot_os_checksum_url: "{{ hypriot_os_urls | selectattr('browser_download_url', 'match', '.*[^(zip)]$') | first }}"

            - name: download hypriot checksum
              uri:
                url: "{{ hypriot_os_checksum_url.browser_download_url }}"
                return_content: yes
              register: hypriot_os_checksum
              changed_when: false

            - name: "download hypriot os {{ hypriot_os_target.tag_name }}"
              get_url:
                url: "{{ hypriot_os_target_url.browser_download_url }}"
                dest: "{{ hypriot_target_path }}"
                checksum: "{{ checksum_algo }}:{{ checksum_digest }}"
              vars:
                checksum_algo: "{{ hypriot_os_checksum_url.browser_download_url | urlsplit('path') | splitext | last | regex_replace('\\.', '') }}"
                checksum_digest: "{{ hypriot_os_checksum.content.split(' ') | first }}"

            - name: create target directory
              file:
                path: "{{ hypriot_target_path }}"
                state: directory

          run_once: yes

        - name: create hypriot user-data files
          copy:
            dest: "{{ hypriot_target_path }}/{{ inventory_hostname }}.user-data.yml"
            content: |
              #cloud-config
              hostname: "{{ inventory_hostname.split('.') | first }}"
              manage_etc_hosts: true

              resize_rootfs: true
              growpart:
                  mode: auto
                  devices: ["/"]
                  ignore_growroot_disabled: false

              users:
                  - name: {{ hypriot_user_name }}
                    sudo: ALL=(ALL) NOPASSWD:ALL
                    shell: /bin/bash
                    groups: users,docker,video
                    plain_text_passwd: {{ hypriot_user_pass }}
                    ssh_authorized_keys:
                        - {{ hypriot_user_pubkey }}
                    lock_passwd: false
                    ssh_pwauth: false
                    chpasswd: { expire: false }

              package_update: false
              package_upgrade: false
              package_reboot_if_required: true
              packages:
                  - ntp

              locale: "en_US.UTF-8"
              timezone: "{{ timezone }}"

              power_state:
                mode: reboot

              {% if host_network is defined -%}
              write_files:
                  - path: /etc/network/interfaces
                    content: |
                      auto lo
                      iface lo inet loopback

                      auto eth0
                      iface eth0 inet static
                          address {{ hypriot_ip | ipaddr('address') }}
                          netmask {{ hypriot_ip | ipaddr('netmask') }}
                          gateway {{ hypriot_gw }}
                          dns-search {{ base_domain }}
                          {% for ns in hypriot_ns -%}
                          dns-nameserver  {{ ns }}
                          {% endfor -%}
              {%- endif -%}
          tags:
            - templates

        - name: echo installation instructions
          debug:
            msg: "run command 'flash --hostname {{ inventory_hostname.split(' ') | first }} --userdata {{ hypriot_target_path }}/{{ inventory_hostname }}.user-data.yml {{ hypriot_target_path }}/{{ hypriot_os_target_url.browser_download_url | urlsplit('path') | basename }}"

      delegate_to: localhost
