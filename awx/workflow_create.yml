---
- name: build workflow configuration options
  set_fact:
    name: "-n {{ workflow.name | string | quote }}"
    description: "{{ ('--description ' + workflow.description | string | quote) if 'description' in workflow else '' }}"
    workflow_org: "{{ '--organization ' + organization.name | string | quote }}"
  tags:
    - workflows

- name: build workflow creation command
  set_fact:
    workflow_source_create_args: "{{ name }} {{ description }} {{ workflow_org }}"
  tags:
    - workflows

- name: create workflow
  command: "awx-cli workflow create {{ workflow_source_create_args }}"
  tags:
    - workflows

- name: create workflow nodes
  command: "awx-cli node create -W {{ workflow.name }} --job-template {{ workflow_node.template }} {{ workflow_node_inventory }} {{ workflow_node_credential }} -f json"
  loop_control:
    loop_var: workflow_node
  vars:
    workflow_node_inventory: "{{ ('--inventory ' + workflow_node.inventory | string | quote) if 'inventory' in workflow_node else '' }}"
    workflow_node_credential: "{{ ('--credential ' + workflow_node.credential | string | quote) if 'credential' in workflow_node else '' }}"
  with_items: "{{ workflow.nodes }}"
  register: workflow_nodes
  tags:
    - workflows

- name: register node names and operation results
  set_fact:
    workflow_node_names: "{{ workflow_nodes.results | map(attribute='workflow_node') | map(attribute='name') | list }}"
    workflow_node_ids: "{{ workflow_nodes.results | map(attribute='stdout') | map('from_json') | map(attribute='id') | list }}"
  tags:
    - workflows

- name: register node name id associations
  set_fact:
    workflow_node_pairs: "{{ workflow_node_names | zip(workflow_node_ids) | list }}"
  tags:
    - workflows

- name: associate workflow nodes
  command: "{{ workflow_node_associate }} -W {{ workflow.name }} {{ workflow_node_parent_id }} {{ workflow_node_id }}"
  loop_control:
    loop_var: workflow_node
  vars:
    workflow_node_map: "{{ dict(workflow_node_pairs) }}"
    workflow_node_associate: "awx-cli node {{ 'associate_' + ( workflow_node.parent_type | default('success') ) + '_node' }}"
    workflow_node_name: "{{ workflow_node.name }}"
    workflow_node_id: "{{ [workflow_node_name] | map('extract', workflow_node_map)| list | head }}"
    workflow_node_parent_name: "{{ (workflow_node.parent | string | quote) if 'parent' in workflow_node else '' }}"
    workflow_node_parent_id: "{{ ([workflow_node_parent_name] | map('extract', workflow_node_map) | list | head) if workflow_node_parent_name != '' else '' }}"
  with_items: "{{ workflow.nodes }}"
  when: workflow_node_parent_name != ''
  tags:
    - workflows
