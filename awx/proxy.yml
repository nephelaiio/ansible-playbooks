---
- name: Install awx proxy

  hosts: awx_proxy

  become: yes

  vars:

    acme_certificate_domain: "{{ awx_url | urlsplit('hostname') }}"
    acme_certificate_chainfile: "/etc/nginx/{{ acme_certificate_domain }}.chain.crt"
    acme_certificate_keyfile: "/etc/nginx/{{ acme_certificate_domain }}.key"
    acme_certificate_add_ca: yes
    acme_certificate_aws_accesskey_id: "{{ aws_access_key_id }}"
    acme_certificate_aws_accesskey_secret: "{{ aws_secret_access_key }}"

    nginx_install_from: os_repository
    nginx_cleanup_config_path:
      - /etc/nginx/conf.d
      - /etc/nginx/sites-enabled/default
      - /etc/nginx/sites-available/default
    nginx_main_template:
      conf_file_name: nginx.conf
      conf_file_location: /etc/nginx/
      user: www-data
      worker_processes: auto
      error_level: warn
      worker_connections: 1024
      http_enable: true
      http_settings:
        keepalive_timeout: 60
        cache: false
        rate_limit: false
        keyval: false
      stream_enable: false
      http_global_autoindex: false
      server_tokens: off
    nginx_http_template:
      awx:
        port: 443
        server_name: "{{ acme_certificate_domain }}"
        conf_file_name: "{{ acme_certificate_domain }}.https.conf"
        ssl:
          key: "{{ acme_certificate_keyfile }}"
          cert: "{{ acme_certificate_chainfile }}"
          protocols: TLSv1.2
          ciphers: HIGH:!aNULL:!MD5
        reverse_proxy:
          locations:
            default:
              location: /
              proxy_pass: http://awx
        upstreams:
          awx:
            name: awx
            lb_method: least_conn
            zone_name: awx
            zone_size: 32k
            sticky_cookie: false
            servers: "{{ awx_app_servers }}"

  roles:

    - nephelaiio.plugins

  tasks:

    - name: build list of upstream servers
      set_fact:
        awx_app_servers: "{{ (awx_app_servers | default({})) | combine (awx_app_server) }}"
      loop: "{{ groups['awx_proxy'] }}"
      vars:
        awx_app_server:
          "{{ item }}":
            address: "{{ [item] | map('extract', hostvars, 'ansible_host') | first }}" 
            port: "{{ awx_container_port }}"
            weight: 1
            health_check: max_fails=3 fail_timeout=5s

    - name: install nginx
      import_role:
        name: nginxinc.nginx
      vars:
        nginx_cleanup_config: no
        nginx_http_template_enable: no
        nginx_main_template_enable: no

    - name: generate certificates
      import_role:
        name: nephelaiio.acme_certificate_route53

    - name: configure nginx
      import_role:
        name: nginxinc.nginx
      vars:
        nginx_cleanup_config: yes
        nginx_http_template_enable: yes
        nginx_main_template_enable: yes

    - name: update nginx pdns record
      uri:
        url: "{{ pdns_url }}/api/v1/servers/localhost/zones/{{ pdns_url_zone }}"
        method: PATCH
        return_content: yes
        body_format: json
        body:
          rrsets:
            - name: "{{ pdns_url_host }}"
              type: A
              ttl: 3600
              changetype: REPLACE
              records:
                - content: "{{ ansible_default_ipv4.address }}"
                  disabled: no
                  set-ptr: no
                  comments: []
        headers:
          X-API-Key: "{{ pdns_api_key }}"
        status_code: 204
      vars:
        pdns_url_host: "{{ acme_certificate_domain }}."
        pdns_url_zone: "{{ pdns_url_host | split_with('.') | tail | join('.') }}"
      register: pdns_zones_query
