---
- name: Install reverse proxy

  hosts: revproxy

  become: yes

  vars:

    apache_packages:
      - apache2
    apache_services:
      - apache2
    apache_conf_dir: /etc/apache2
    apache_vhost_filename: 004-awx.conf
    apache_vhost_template: apache/revproxy.conf.j2
    apache_mods_enabled:
      - proxy.load
      - proxy_http.load
      - proxy_balancer.load
      - lbmethod_bytraffic.load
    proxy_port: 80
    proxy_virtualhost: "*:{{ proxy_port }}"
    proxy_servername: "{{ awx_url | urlsplit('hostname') }}"
    proxy_admin: tedc@imail.ag
    proxy_backend_proto: "http"
    proxy_backend_members: "{{ groups['awx'] | map('extract', hostvars, ['ansible_host']) | list }}"
    proxy_backend_port: "80"

  tasks:

    - name: install apache
      package:
        name: "{{ item }}"
        state: present
      with_items: "{{ apache_packages }}" 

    - name: enable modules
      command: "a2enmod {{ item }}"
      args:
        creates: "{{ apache_conf_dir }}/mods-enabled/{{ item }}"
      notify: restart apache
      with_items: "{{ apache_mods_enabled }}"

    - name: configure apache
      template:
        src: "{{ apache_vhost_template }}"
        dest: "{{ apache_conf_dir }}/sites-available/{{ apache_vhost_filename }}"
      notify: restart apache

    - name: activate apache configuration
      file:
        src: "{{ apache_conf_dir }}/sites-available/{{ apache_vhost_filename }}"
        dest: "{{ apache_conf_dir }}/sites-enabled/{{ apache_vhost_filename }}"
        state: link
      notify: restart apache

    - name: prune apache configuration
      file:
        path: "/etc/apache2/sites-enabled/000-default.conf"
        state: absent
      notify: restart apache

  handlers:

    - name: restart apache
      service:
        name: "{{ item }}"
        state: restarted
      with_items: "{{ apache_services }}"


- name: Install postgres

  hosts: awx

  become: yes

- name: Install awx

  hosts: awx

  become: yes

  vars:

    postgresql_global_config_options:
      - option: listen_addresses
        value: "*"
    postgresql_databases:
      - name: "{{ pg_database }}" 
    postgresql_users:
      - name: "{{ pg_username }}"
        password: "{{ pg_password }}"
        db: "{{ pg_database }}"
    postgresql_hba_entries:
      - { type: local, database: all, user: postgres, auth_method: peer }
      - { type: local, database: all, user: all, auth_method: peer }
      - { type: host, database: all, user: all, address: '127.0.0.1/32', auth_method: md5 }
      - { type: host, database: all, user: all, address: "{{ pg_hostname }}/32", auth_method: md5 }
      - { type: host, database: "{{ pg_database }}", user: "{{ pg_username }}", address: "0.0.0.0/0", auth_method: md5 }

  tasks:

    - name: install postgresql
      include_role:
        name: geerlingguy.postgresql

    - name: install docker
      include_role:
        name: nephelaiio.docker

    - name: check awx installer variables
      include_role:
        name: check_vars
        tasks_from: check_docker

    - name: check awx installer variables
      include_role:
        name: local_docker
