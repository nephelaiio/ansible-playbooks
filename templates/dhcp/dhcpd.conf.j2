#{{ ansible_managed }}

{% if omapikey is defined %}
omapi-port 7911;
omapi-key {{ omapikey.name }};

# OMAPI key declaration
key {{ omapikey.name }} {
  algorithm {{ omapikey.algorithm }};
  secret "{{ omapikey.secret }}";
}
{% endif %}

{% if failover is defined %}
failover peer "failover-partner" {
{%   for setting in failover %}
  {{ setting }};
{%   endfor %}  
}
{% endif %}

# The ddns-updates-style parameter controls whether or not the server will
# attempt to do a DNS update when a lease is confirmed. We default to the
# behavior of the version 2 packages ('none', since DHCP v2 didn't
# have support for DDNS.)
ddns-update-style interim;

# Option definitions common to all supported networks...
option domain-name-servers {{ recursors | default(servers.recursors) | join(', ') }};
default-lease-time {{ lease_time }};
max-lease-time {{ 12 * lease_time }};

# If this DHCP server is the official DHCP server for the local
# network, the authoritative directive should be uncommented.
authoritative;

# Use this to send dhcp log messages to a different log file (you also
# have to hack syslog.conf to complete the redirection).
log-facility local7;

# Subnet and host declarations
{% for n in networks %}
subnet {{ n.network }} netmask {{ n.netmask }} {
{%   for p in n.pools %}
  pool {
{%     if failover is defined %}
    failover peer "failover-partner";
{%     endif %}
    range {{ p.range }};
  }
{%   endfor %}
  option routers {{ n.router }};
{%   if 'domain_name' in n %}
  option domain-name "{{ n.domain_name }}";
{%   endif %}
{%   if 'ns' in n %}
  option domain-name-servers {{ n.ns | list | join(',') }};
{%   endif %}
}
{%   if 'zone' in n %}
zone {{ n.zone }} {
  primary {{ servers.dns | first }};
}
{%   endif %}
{%   for r in n.reservations.values() + (groups['all'] | map('extract', hostvars) | select('test_network', n.network + '/' + n.netmask) | map('alias_keys', {'inventory_hostname': 'host', 'ansible_host': 'ip-address' }) | list)  %}
{%     if 'hw_address' in r %}
host {{ r['host'] }} {
  hardware ethernet {{ r['hw_address'] }};
  fixed-address {{ r['ip-address'] }};
  option domain-name "{{ r['host'] | split_with('.') | tail | join('.') }}";
  option host-name "{{ r['host'] | split_with('.') | head }}";
}
{%     endif %}
{%   endfor %}
{% endfor %}

{% for z in zones %}
zone {{ z.name }} {
  primary {{ servers.dns | first }};
}
{% endfor %}
