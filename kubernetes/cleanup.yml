---
- name: configure kubectl

  hosts: localhost

  connection: local

  become: no

  vars:

    kubectl_config: ~/.kube/config
    kubectl_bin: /usr/local/bin/kubectl
    helm_bin: /usr/local/bin/helm
    artifacts_dir: ../inventory/artifacts
    credentials_dir: ../inventory/credentials
    kubespray_config: "{{ artifacts_dir }}/admin.conf"
    kubespray_kubectl: "{{ artifacts_dir }}/kubectl"

  tasks:

    - name: create kubectl config directory
      file:
        state: directory
        path: ~/.kube

    - name: check artifacts directory
      stat:
        path: "{{ artifacts_dir }}"
      register: ks_artifacts

    - name: check configuration file
      stat:
        path: "{{ kubespray_config }}"
      register: ks_config
      when: ks_artifacts.stat.exists

    - name: copy kubectl configuration
      copy:
        remote_src: yes
        dest: "{{ kubectl_config }}"
        src: "{{ kubespray_config }}"
      when:
        - ks_artifacts.stat.exists
        - ks_config.stat.exists

    - name: copy kubectl bin
      copy:
        remote_src: yes
        dest: "{{ kubectl_config }}"
        src: "{{ kubespray_config }}"
        mode: 0x755
      when:
        - ks_artifacts.stat.exists
        - ks_config.stat.exists

    - block:

        - name: create helm temp dir
          tempfile:
            state: directory
            suffix: images
          register: helm_dir

        - name: fetch helm bin
          fetch:
            src: "{{ helm_bin }}"
            dest: "{{ helm_dir.path }}/{{ helm_bin | basename }}"
            flat: yes
          delegate_to: "{{ groups['kube-master'] | first }}"
          become: yes

        - name: copy helm bin to path
          copy:
            src: "{{ helm_dir.path }}/{{ helm_bin | basename }}"
            dest: "{{ helm_bin }}"
            mode: 0x755
            remote_src: yes
          become: yes

      always:

        - name: destroy helm temp dir
          file:
            state: absent
            path: "{{ helm_dir.path }}"

    - name: destroy config artifacts
      file:
        state: absent
        path: "{{ item }}"
      with_items:
        - "{{ artifacts_dir }}"
        - "{{ credentials_dir }}"
