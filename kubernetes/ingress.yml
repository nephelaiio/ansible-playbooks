
---
- name: Deploy nginx ingress

  hosts: localhost

  vars:

    traefik_namespace: kube-system
    traefik_service_account: traefik-ingress-controller
    traefik_service_name: traefik-ingress-controller
    traefik_release: v1.7.4
    nginx_manifest_url: "https://raw.githubusercontent.com/kubernetes/ingress-nginx/{{ nginx_release }}/deploy/mandatory.yaml"

  roles:

    - nephelaiio.plugins

  tasks:

    - name: include private variables
      include_vars:
        dir: "../{{ variables }}"

    - name: create traefik ingress namespace
      k8s:
        state: "{{ kube_state | default('present') }}"
        definition: 
          apiVersion: v1
          kind: Namespace
          metadata:
            name: "{{ traefik_namespace }}" 
            labels:
              name: "{{ traefik_namespace }}"
      when: traefik_namespace != 'kube-system'

    - name: create traefik ingress service account
      k8s:
        state: "{{ kube_state | default('present') }}"
        definition:
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: "{{ traefik_service_account }}"
            namespace: "{{ traefik_namespace }}"

    - name: create traefik cluster role
      k8s:
        state: "{{ kube_state | default('present') }}"
        definition:
          kind: ClusterRole
          apiVersion: rbac.authorization.k8s.io/v1beta1
          metadata:
            name: "{{ traefik_service_account }}"
          rules:
            - apiGroups:
                - ""
              resources:
                - services
                - endpoints
                - secrets
              verbs:
                - get
                - list
                - watch
            - apiGroups:
                - extensions
              resources:
                - ingresses
              verbs:
                - get
                - list
                - watch

    - name: create traefik cluster role binding
      k8s:
        state: "{{ kube_state | default('present') }}"
        definition:
          kind: ClusterRoleBinding
          apiVersion: rbac.authorization.k8s.io/v1beta1
          metadata:
            name: "{{ traefik_service_name }}"
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: "{{ traefik_service_name }}"
          subjects:
          - kind: ServiceAccount
            name: "{{ traefik_service_name }}"
            namespace: "{{ traefik_namespace }}"

    - name: create traefik ingress daemonset
      k8s:
        state: "{{ kube_state | default('present') }}"
        definition:
          apiVersion: extensions/v1beta1
          kind: DaemonSet
          metadata:
            name: "{{ traefik_service_name }}"
            namespace: "{{ traefik_namespace }}"
            labels:
              app: "{{ traefik_service_name }}"
          spec:
            template:
              metadata:
                labels:
                  app: "{{ traefik_service_name }}"
                  name: "{{ traefik_service_name }}"
              spec:
                serviceAccountName: "{{ traefik_service_account }}"
                terminationGracePeriod: 10
                containers:
                - image: "traefik:{{ traefik_release }}"
                  name: "{{ traefik_service_name }}"
                  ports:
                  - name: http
                    containerPort: 80
                    hostPort: 80
                  - name: admin
                    containerPort: 8080
                  securityContext:
                    capabilities:
                      drop:
                      - ALL
                      add:
                      - NET_BIND_SERVICE
                  args:
                  - --api
                  - --kubernetes
                  - --logLevel=INFO

    - name: create traefik ingress controller service
      k8s:
        state: "{{ kube_state | default('present') }}"
        definition:
          kind: Service
          apiVersion: v1
          metadata:
            name: "{{ traefik_service_name }}"
            namespace: "{{ traefik_namespace }}"
          spec:
            selector:
              app: "{{ traefik_service_name }}"
            ports:
              - protocol: TCP
                port: 80
                name: web
              - protocol: TCP
                port: 8080
                name: admin
            type: LoadBalancer
