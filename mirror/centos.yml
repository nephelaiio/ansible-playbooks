---
- name: Configure apt package mirror

  hosts: none

  become: yes

  vars:

    centos_mirror_root: "{{ mirror_root }}/{{ centos_mirror_dir }}"
    centos_mirror_host: mirror.sfo12.us.leaseweb.net
    centos_vhost_path: "{{ web_root }}/{{ centos_mirror_dir }}"
    epel_mirror_url: rsync://mirror.nodesdirect.com/epel
    epel_mirror_root: "{{ mirror_root }}/epel"
    epel_vhost_path: "{{ web_root }}/epel"
    centos_rsync_options: "-arvzSHP --exclude i386 --exclude ppc64  --exclude SRPMS --exclude drpms --exclude centosplus --numeric-ids --exclude ?Server --exclude testing --exclude beta --exclude .html --numeric-ids --delete --delete-delay --delay-updates --exclude 6 --exclude 6.? --exclude 6.??"
    epel_rsync_options: "-arvzSHP --prune-empty-dirs --delete --include='*/' --include='7/' --include='7/x86_64/***' --include='7/aarch64/***' --include RPM-GPG-KEY-EPEL-7 --include fullfilelist --include fullfiletimelist-epel --include imagelist-epel --exclude='*'"

  roles:

    - nephelaiio.plugins

  tasks:

    - name: include private variables
      include_vars:
        dir: "{{ variables }}"

    - name: create mirror root
      file:
        path: "{{ web_root }}"
        state: directory

    - block:

        - name: install apt mirror packages
          package:
            name:
              - apt-mirror
              - apache2
              - apt-transport-https
              - util-linux
              - wget

        - name: configure apt mirror
          template:
            src: apt/mirror.list.j2
            dest: "{{ apt_mirror_conf }}"

        - name: add apt mirror update cronjob
          cron:
            name: 'update apt-mirror cache'
            job: 'flock -n /tmp/apt-mirror apt-mirror'
            state: "{{ apt_mirror_state }}"
            special_time: daily

        - name: add apt mirror clean cronjob
          cron:
            name: 'clean apt-mirror cache'
            job: 'flock -n /tmp/apt-mirror /var/spool/apt-mirror/var/clean.sh'
            state: "{{ apt_mirror_state }}"
            special_time: daily

        - name: create ubuntu link
          file:
            path: "{{ web_root }}/ubuntu"
            src: "{{ ubuntu_mirror_path }}"
            state: link
            force: yes

        - name: create debian link
          file:
            path: "{{ web_root }}/debian"
            src: "{{ debian_mirror_path }}"
            state: link
            force: yes

      when: apt_mirror_state | default('absent') == 'present'

    - block:

        - name: install yum mirror packages
          package:
            name:
              - rsync

        - name: create centos mirror path
          file:
            path: "{{ centos_mirror_path }}"
            state: directory

        - name: add centos mirror cronjob
          cron:
            name: 'update centos mirror cache'
            job: "flock -n /tmp/centos-mirror /usr/bin/rsync {{ centos_rsync_options }} rsync://{{ centos_mirror }}/CentOS/ {{ centos_mirror_path }}"
            state: "{{ yum_mirror_state }}"
            special_time: daily

        - name: add epel mirror cronjob
          cron:
            name: 'update epel mirror cache'
            job: "flock -n /tmp/epel-mirror /usr/bin/rsync {{ centos_rsync_options }} rsync://{{ centos_mirror }}/fedora-epel/ {{ epel_mirror_path }}"
            state: "{{ yum_mirror_state }}"
            special_time: daily

      when: yum_mirror_state | default('absent') == 'present'

    - block:

        - name: install kvm mirror packages
          package:
            name:
              - wget

        - name: create kvm image mirror paths
          file:
            path: "{{ web_root }}/{{ item.value.url | urlsplit('path') | dirname }}"
            state: directory
          with_dict: "{{ kvm_images }}"

        - name: add kvm image mirror cronjob
          cron:
            name: "update {{ item.key }} kvm image"
            job: "wget {{ item.value.src }} -O {{ web_root }}/{{ item.value.url | urlsplit('path') }}"
            state: "{{ kvm_mirror_state }}"
            special_time: daily
          with_dict: "{{ kvm_images }}"

        - name: create raspbian image mirror paths
          file:
            path: "{{ raspbian_mirror_path }}"
            state: directory

        - name: add raspbian image mirror cronjob
          cron:
            name: "update raspbian image"
            job: "wget {{ raspbian_release.src }} -O {{ web_root }}/{{ raspbian_release.url | urlsplit('path') }}"
            state: "{{ raspbian_mirror_state }}"
            special_time: daily

      when: kvm_mirror_state | default('absent') == 'present'
