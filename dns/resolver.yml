---
- name: Configure pdns resolvers

  hosts: pdns_clients

  become: yes

  gather_facts: yes

  roles:

    - nephelaiio.plugins

  vars:

    resolv_netplan_config_file: "/etc/netplan/{{ ansible_default_ipv4.alias }}.yaml"
    resolv_iface: "{{ ansible_default_ipv4 }}"
    resolv_ipaddr: "{{ (resolv_iface.address + '/' + resolv_iface.netmask) | ipv4 }}"
    resolv_nameservers: "{{ groups['pdns_recursors'] | map('extract', hostvars, ['ansible_host']) | list }}"

  tasks:

    - debug:
        var: resolv_nameservers

    - block:

        - name: retrieve package facts
          package_facts:

        - block:

            - name: find existing netplan files
              find:
                paths: "{{ resolv_netplan_config_file | dirname }}"
                patterns: "*.yml,*.yaml"
              register: netplan_query

            - name: define netplan configuration
              copy:
                dest: "{{ resolv_netplan_config_file }}"
                content: |
                  ---
                  {{ network_config }}
              vars:
                network_config: |
                  network:
                    version: 2
                    ethernets:
                      {{ resolv_iface.alias }}:
                        match:
                          macaddress: {{ resolv_iface.macaddress }}
                        addresses:
                          - {{ resolv_ipaddr }}
                        gateway4: {{ resolv_iface.gateway }}
                        nameservers:
                          search:
                            - {{ base_domain }}
                          addresses: {{ resolv_nameservers | to_yaml }}
              notify: restart networking

            - name: remove existing netplan files
              file:
                path: "{{ netplan_file }}"
                state: absent
              become: true
              loop_control:
                loop_var: netplan_file
              with_items: "{{ netplan_query.files | map(attribute='path') | list }}"
              when:
                - netplan_file != resolv_netplan_config_file
              notify: restart networking

          when: packages | intersect(['netplan.io']) | length > 0

        - name: manage resolv.conf
          include_role:
            name: ahuffman.resolv
          when: packages | intersect(['netplan.io']) | length == 0

      when: dns_manage | default('yes')

  handlers:

    - name: netplan apply
      command: netplan apply
      listen: restart networking

    - name: restart systemd-networkd
      service:
        name: systemd-networkd
        state: restarted
      listen: restart networking
