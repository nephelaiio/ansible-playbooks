---
- name: Configure pdns resolvers

  hosts: pdns_clients

  become: yes

  gather_facts: yes

  roles:

    - nephelaiio.plugins

  vars:

    resolv_netplan_config_file: "/etc/netplan/{{ ansible_default_ipv4.alias }}.yaml"
    resolv_iface: "{{ ansible_default_ipv4 }}"
    resolv_ipaddr: "{{ (ansible_default_ipv4.address + '/' + ansible_default_ipv4.netmask) | ipv4 }}"

  tasks:

    - name: retrieve package fats
      package_facts:

    - block:

        - name: find existing netplan files
          find:
            paths: "{{ netplan_config_file | dirname }}"
            patterns: "*.yml,*.yaml"
          register: netplan_query

        - name: define netplan configuration
          copy:
            dest: "{{ netplan_config_file }}"
            content: |
              ---
              {{ network_config }}
          vars:
            network_config: |
              network:
                version: 2
                ethernets:
                  {{ netplan_iface.alias }}:
                    match:
                      macaddress: {{ netplan_iface.macaddress }}
                    addresses:
                      - {{ netplan_ipaddr }}
                    gateway4: {{ netplan_iface.gateway }}
                    nameservers:
                      search:
                        - {{ base_domain }}
                      addresses: {{ netplan_nameservers | to_yaml }}
          notify: restart networking

        - name: remove existing netplan files
          file:
            path: "{{ netplan_file }}"
            state: absent
          become: true
          loop_control:
            loop_var: netplan_file
          with_items: "{{ netplan_query.files | map(attribute='path') | list }}"
          when:
            - netplan_file != netplan_config_file
          notify: restart networking

      when: package_facts.packages | intersect(['netplan.io']) | length > 0

    - name: manage resolv.conf
      include_role:
        name: ahuffman.resolv
      when: package_facts.packages | intersect(['netplan.io']) | length == 0

  handlers:

    - name: netplan apply
      command: netplan apply
      listen: restart networking

    - name: restart systemd-networkd
      service:
        name: systemd-networkd
        state: restarted
      listen: restart networking
