# vim: ts=2 sw=2 et :
---
- include: provision.yml

- name: start jupyter.nephelai.io

  hosts: local

  vars_files: 
    - vars.yml

  tasks:

    - name: query instances
      changed_when: false
      local_action: command aws ec2 describe-instances --region {{ region }} --filter Name=client-token,Values={{ client_token }} --query "Reservations[].Instances[]"
      register: instance_query

    - name: register instances
      set_fact:
        instances: "{{ instance_query.stdout | from_json }}"

    - name: manage jupyter instances
      local_action:
        module: ec2
        region: "{{ region }}"
        id: "{{ client_token }}"
        instance_ids: "{{ instances | map(attribute='InstanceId') | list }}"
        state: "{{ state }}"

    - name: pause until instance values are updated
      pause:
          seconds: "{{ pause_seconds }}"

    - name: query instances
      changed_when: false
      local_action: command aws ec2 describe-instances --region {{ region }} --filter Name=client-token,Values={{ client_token }} --query "Reservations[].Instances[]"
      register: instance_query

    - name: register instances
      set_fact:
        instances: "{{ instance_query.stdout | from_json }}"

    - name: wait for ssh
      changed_when: false
      local_action:
        module: wait_for
        host: "{{ item.PublicDnsName }}"
        port: 22
        state: started
      with_items: "{{ instances }}"

- include: route53.yml

  #- name: manage services
  #
  #  hosts: jupyter
  #
  #  become: yes
  #
  #  roles:
  #
  #    - role: nephelaiio.nginx
  #      nginx_configs:
  #        upstream:
  #          - upstream notebok { localhost: 8888; }
  #      nginx_sites:
  #        jupyter:
  #          - listen 80
  #          - "server_name jupyter.{{ route53_zone }}"
  #          - client_max_body_size 3M;
  #          - location / { 
  #            proxy_pass http://notebook; 
  #            proxy_set_header Host $host; 
  #            }
  #          - location ~ /api/kernels { 
  #            proxy_pass http://notebook; 
  #            proxy_set_header Host $host; 
  #            proxy_http_version 1.1;
  #            proxy_set_header Upgrade "websocket";
  #            proxy_set_header Connection "Upgrade";
  #            proxy_read_timeout 86400;
  #            }
  #          - location ~ /terminals { 
  #            proxy_pass http://notebook; 
  #            proxy_set_header Host $host; 
  #            proxy_http_version 1.1;
  #            proxy_set_header Upgrade "websocket";
  #            proxy_set_header Connection "Upgrade";
  #            proxy_read_timeout 86400;
  #            }
