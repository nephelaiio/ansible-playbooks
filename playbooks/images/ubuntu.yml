---
- name: inspect current user
  command: whoami
  changed_when: false
  register: inspect_username

- name: define default user
  set_fact:
    default_username: "{{ inspect_username.stdout }}"

- name: inspect current user pass
  command: "getent shadow {{ inspect_username.stdout }}"
  become: yes
  changed_when: false
  register: inspect_password

- name: define default password
  set_fact:
    default_password: "{{ inspect_password.stdout | split_with(':') | tail | head }}"

- name: inspect current user ssh key
  command: "cat ~{{ default_username }}/.ssh/id_rsa.pub"
  register: inspect_sshkey
  changed_when: false
  failed_when: false

- name: define default ssh key
  set_fact:
    default_sshkey: "{{ inspect_sshkey.stdout }}"

- name: create temporary mount directory
  tempfile:
    state: directory
    prefix: iso
  register: tmpdir_src
  changed_when: false

- name: create temporary target directory
  tempfile:
    state: directory
    prefix: iso
  register: tmpdir_dest
  changed_when: false

- name: create image target directory
  file:
    state: directory
    path: ../files/images

- name: register source ubuntu iso file
  set_fact:
    src_iso: "../files/images/ubuntu.{{ ubuntu_release }}.iso"

- name: fetch ubuntu source iso
  get_url:
    url: "http://releases.ubuntu.com/{{ ubuntu_release }}/ubuntu-{{ ubuntu_release }}-server-amd64.iso"
    dest: "{{ src_iso }}"

- name: mount ubuntu source iso
  command: "mount -t iso9660 -o loop {{ src_iso }} {{ tmpdir_src.path }}"
  args:
    warn: no
  become: yes

- name: create output tree structure
  command: "cp -aT {{ tmpdir_src.path }} {{ tmpdir_dest.path }}"
  args:
    creates: "{{ tmpdir_dest.path }}/isolinux"
  become: yes
  changed_when: false

- name: unmount ubuntu source iso
  command: "umount {{ tmpdir_src.path }}"
  args:
    warn: no
  become: yes

- name: define installation menu language
  copy:
    dest: "{{ tmpdir_dest.path }}/isolinux/lang"
    content: en
  become: yes
  changed_when: false

- name: configure isolinux
  lineinfile:
    path: "{{ tmpdir_dest.path }}/isolinux/isolinux.cfg"
    regexp: 'timeout\s+[0-9]+'
    line: 'timeout 1'
  become: yes
  changed_when: false

- name: register seed file
  set_fact:
    seed_file: "ubuntu.seed"

- name: create seed file
  template:
    src: ../templates/images/ubuntu.seed
    dest: "{{ tmpdir_dest.path }}/{{ seed_file }}"
  vars:
    hostname: "{{ ubuntu_host | split_with('.') | head }}"
    domain: "{{ ubuntu_host | split_with('.') | tail | join('.') }}"
    timezone: "{{ ubuntu_timezone }}"
    username: "{{ ubuntu_username | default(default_username) }}"
    password: "{{ ubuntu_password | default(default_password) }}"
    sshkey: "{{ ubuntu_sshkey | default(default_sshkey) }}"
    late_command: "{{ ubuntu_late_command | default('') }}"
  become: yes
  changed_when: false

- name: retrieve seed file checksum
  command: "md5sum {{ tmpdir_dest.path }}/{{ seed_file }}"
  become: yes
  register: seed_md5sum

- name: set bootloader preseed configuration
  template:
    src: ../templates/images/isolinux.txt
    dest: "{{ tmpdir_dest.path }}/isolinux/txt.cfg"
  vars:
    preseed_file: "{{ seed_file }}"
    preseed_checksum: "{{ seed_md5sum.stdout | split_with(' ') | first }}"
  become: yes

- name: create ubuntu autoinstall iso
  command: "mkisofs -D -r -V '{{ ubuntu_host }}' -cache-inodes -J -cache-inodes -J -l -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -o /tmp/{{ ubuntu_host }}.iso ."
  args:
    chdir: "{{ tmpdir_dest.path }}"
  become: yes

- name: archive ubuntu autoinstall iso
  command: "cp /tmp/{{ ubuntu_host }}.iso ../files/images/{{ ubuntu_host }}.iso"
  tags:
    - skip_ansible_lint

- name: remove temporary directories
  file:
    path: "{{ tmpitem }}"
    state: absent
  with_items:
    - "{{ tmpdir_src.path }}"
    - "{{ tmpdir_dest.path }}"
    - "/tmp/{{ ubuntu_host }}.iso"
  loop_control:
    loop_var: tmpitem
  become: yes
  changed_when: false
