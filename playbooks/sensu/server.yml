- hosts: "{{ target_hosts }}"

  become: yes
  
  tasks:

    - name: Install RabbitMQ packages
      apt:
        name: "{{ item }}"
        state: latest
      with_items:
        - rabbitmq-server
      notify: Enable RabbitMQ management

    - name: Retrieve RabbitMQ virtual hosts
      changed_when: false
      command: rabbitmqctl list_vhosts name
      register: rabbitmq_vhosts

    - name: Remove default RabbitMQ virtual host
      command: rabbitmqctl delete_vhost /
      when: "'/' in rabbitmq_vhosts.stdout_lines"

    - name: Create Sensu RabbitMQ virtual host
      command: rabbitmqctl add_vhost /sensu
      when: "'/sensu' not in rabbitmq_vhosts.stdout_lines"

    - name: Retrieve RabbitMQ users
      changed_when: false
      command: rabbitmqctl list_users
      register: rabbitmq_users

    - name: Remove RabbitMQ guest user
      command: "rabbitmqctl delete_user guest"
      when: "'guest' in rabbitmq_users.stdout"

    - name: Create RabbitMQ Sensu user
      command: "rabbitmqctl add_user {{ rabbitmq.sensu.user }} {{ rabbitmq.sensu.password }}"
      when: rabbitmq.sensu.user not in rabbitmq_users.stdout

#    - name: Ensure redis binds to accessible IP
#      lineinfile:
#        dest: /etc/redis/redis.conf
#        regexp: '^bind'
#        line: 'bind 0.0.0.0'
#      notify: Restart Redis service 
  

#    - name: Manage Sensu services
#      service:
#        name: "{{ item }}"
#        state: started
#        enabled: yes
#      with_items:
#        - rabbitmq-server
#        - sensu
#        - redis

  handlers:

    - name: Enable RabbitMQ management
      command: rabbitmq-plugins enable
      notify: Restart RabbitMQ

    - name: Restart RammitMQ
      service:
        name: "{{ item }}"
        state: started
        enabled: yes
      with_items:
        - rabbitmq-server

#    - name: Restart Redis service
#      service:
#        name: "{{ item }}"
#        state: started
#        enabled: yes
#      with_items:
#        - redis
