---
- hosts: rpic

  become: yes

  tasks:

    - name: inspect nameservers
      changed_when: False
      command: "host -W 1 www.google.com"
      ignore_errors: true
      register: resolv

    - name: install dns utilities
      apt:
        update_cache: yes
        name: dnsutils
        state: latest

    - name: install MySQL
      include_role:
        name: geerlingguy.mysql
      vars:
        mysql_packages:
          - mariadb-client
          - mariadb-server
          - python-mysqldb
        mysql_databases:
          - name: '{{ pdns.backends.gmysql.dbname }}'
        mysql_users:
          - name: '{{ pdns.backends.gmysql.user }}'
            password: '{{ pdns.backends.gmysql.password }}'
            priv: '{{ pdns.backends.gmysql.dbname }}.*:ALL'

    - name: create temporary directory
      tempfile:
        state: directory
        prefix: pdns
      register: tmpdir
      changed_when: false

    - name: install powerdns
      apt:
        update_cache: yes
        name: "{{ item }}"
        state: latest
      with_items:
        - pdns-server
        - pdns-backend-mysql

    - name: configure powerdns
      template:
        src: ../../templates/dns/pdns.conf.j2
        dest: /etc/powerdns/pdns.conf
      vars:
        config: "{{ pdns.config }}"
        backends: "{{ pdns.backends }}"
      notify: restart pdns

    - name: build database initialization script
      template:
        src: ../../templates/dns/schema.sql.j2
        dest: "{{ tmpdir.path }}/schema.sql"
      changed_when: false

    - name: initialize database
      command: |
        mysql "{{ pdns.backends.gmysql.dbname }}" -e "
        SOURCE {{ tmpdir.path }}/schema.sql;"
      changed_when: false

    - name: build data initialization script
      changed_when: false
      template:
        src: ../../templates/dns/data.sql.j2
        dest: "{{ tmpdir.path }}/data.sql"
      vars:
        domains: "{{ pdns.domains }}"
        keys:
          - "{{ tsigkeys.dhcp }}"

    - name: override records
      command: |
        mysql "{{ pdns.backends.gmysql.dbname }}" -e "
        SOURCE {{ tmpdir.path }}/data.sql;"
      changed_when: false

    - name: remove temporary directory
      file:
        path: "{{ tmpdir.path }}"
        state: absent
      changed_when: false

  handlers:

    - name: restart pdns
      service:
        name: pdns
        state: restarted
