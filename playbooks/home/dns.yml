# vim: ts=2 sw=2 et :
---
- hosts: recursor

  name: gather facts from dns servers

  tasks: [ ]


- hosts: dns

  vars:
    pdns_db:
      name: pdns
      user: pdns
      pass: '{{ pdns_db_pass }}'
    pdns_tsigkeys:
      - name: '{{ tsigkeys.dhcp.name }}'
        secret: '{{ tsigkeys.dhcp.secret }}' 
        domains:
          - "{{ dns.zones.home.name }}"
    pdns_config:
      master: yes
      slave: no
      local-address: "{{ ansible_default_ipv4.address }}:53"
      security-poll-suffix: ''
    pdns_backends:
      gmysql:
        user: '{{ pdns_db.user }}'
        host: 127.0.0.1
        password: '{{ pdns_db.pass }}'
        dbname: '{{ pdns_db.name }}'
    pdns_domains: "{{ dns.zones.values() }}"

    mysql_packages:
      - mariadb-client
      - mariadb-server
      - python-mysqldb
    mysql_databases:
      - name: '{{ pdns_db.name }}'
    mysql_users:
      - name: pdns
        password: '{{ pdns_db.pass }}'
        priv: '{{ pdns_db.name }}.*:ALL' 

  become: yes

  tasks:

    - name: Inspect nameservers
      changed_when: False
      command: "host -W 1 www.google.com"
      ignore_errors: true
      register: resolv

    - name: Configure resolution
      include_role:
        name: ahuffman.resolv
      vars:
        resolv_nameservers:
          - 8.8.8.8
          - 8.8.4.4
      when: resolv.rc != 0

    - name: Install dns utilities
      apt:
        update_cache: yes
        name: dnsutils
        state: latest
    
    - name: Install MySQL
      include_role:
        name: geerlingguy.mysql

    - name: Create temporary directory
      tempfile:
        state: directory
        prefix: pdns
      register: tmpdir

    - name: Install dns auth server
      include_role:
        name: pdns-ansible

    - name: Build database initialization script
      template:
        src: ../../templates/dns/schema.sql.j2
        dest: "{{ tmpdir.path }}/schema.sql"

    - name: Initialize database
      command: |
        mysql "{{ pdns_db.name }}" -e "
        SOURCE {{ tmpdir.path }}/schema.sql;"
      changed_when: false

    - name: Build data initialization script
      template:
        src: ../../templates/dns/data.sql.j2
        dest: "{{ tmpdir.path }}/data.sql"
      vars:
        domains: "{{ pdns_domains }}"
        keys:
          - "{{ tsigkeys.dhcp }}"

    - name: Override records
      command: |
        mysql "{{ pdns_db.name }}" -e "
        SOURCE {{ tmpdir.path }}/data.sql;"
      changed_when: false

    - name: Remove temporary directory
      file:
        path: "{{ tmpdir.path }}"
        state: absent
      when: false

    - name: Configure resolution
      include_role:
        name: ahuffman.resolv
      vars:
        resolv_nameservers: "{{ dns.recursors }}"
